Chapter 2, Step 8
Select ProductName from Products
 

Chapter 2, Step 9
Select ProductNam from Products
 

Chapter 2, Step 10
select count(*) as NumberOfProducts from Products
 


Chapter 2, Step 14
SELECT ProductName, ListPrice, DateAdded
FROM Products
ORDER BY ProductName;  
SELECT COUNT(*) AS NumberOfProducts,
       MAX(ListPrice) AS MostExpensiveProduct,
       MIN(DateAdded) AS OldestProduct
FROM Products 
SELECT ProductName, ListPrice, DateAdded
FROM Products
ORDER BY ProductName;

SELECT COUNT(*) AS NumberOfProducts,
       MAX(ListPrice) AS MostExpensiveProduct,
       MIN(DateAdded) AS OldestProduct
FROM Products;  





Chapter 3, Step 1
Select ProductCode, ProductName, ListPrice,
DiscountPercent from Products
Order by ListPrice DESC;
 

Chapter 3, Step 2
Select CONCAT(LastName, ',', FirstName) as
FullName from Customers where LastName > 'M'
Order by LastName 

Chapter 3, Step 3
Select ProductName, ListPrice, DateAdded
from Products where ListPrice > 500 and ListPrice < 2000
Order by DateAdded DESC
 






Chapter 3, Step 4
Select ProductName, ListPrice, DiscountPercent,
ListPrice * (DiscountPercent/100) as DiscountAmount,
ListPrice-(ListPrice * (DiscountPercent/100)) as
DiscountPrice from Products
Order by DiscountPrice DESC
 

Chapter 3, Step 5
Select ItemID, ItemPrice, DiscountAmount, Quantity,
ItemPrice * Quantity as PriceTotal, DiscountAmount *
Quantity as DiscountTotal, (ItemPrice - DiscountAmount) *
Quantity as ItemTotal from OrderItems where
(ItemPrice - DiscountAmount) * Quantity > 500
Order by ItemTotal DESC  
Chapter 3, Step 6
Select OrderID, OrderDate, ShipDate
From Orders where ShipDate is null  









Chapter 3, Step 7
Select 100 as Price, .07 as TaxRate,
100 * .07 as TaxAmount, (100) + (100 *.07) as Total  


Chapter 4, Step 1
Select CategoryName, ProductName, ListPrice
from Categories join Products on
Categories.CategoryID = Products.CategoryID
Order by CategoryName, ProductName ASC;  

Chapter 4, Step 2
Select FirstName, LastName, Line1, City, State,
ZipCode from Customers join Addresses on
Customers.CustomerID = Addresses.CustomerID
where EmailAddress = 'allan.sherwood@yahoo.com';  

Chapter 4, Step 3
Select FirstName, LastName, Line1, City, State,
ZipCode from Customers join Addresses on
Customers.CustomerID = Addresses.CustomerID and
Customers.ShippingAddressID = Addresses.AddressID;  

Chapter 4, Step 4
Select LastName, FirstName, OrderDate, ProductName, ItemPrice,
DiscountAmount, Quantity from Customers A, Orders B, OrderItems C,
Products D where A.CustomerID = B.CustomerID and
B.OrderID = C.OrderID and C.ProductID = D.ProductID
Order by LastName, OrderDate, ProductName;  

Chapter 4, Step 5
Select a.ProductName, b.ListPrice from
Products a join Products b on
a.ListPrice = b.ListPrice and
a.ProductID <> b.ProductID
Order by a.ProductName;  

Chapter 4, Step 6
Select CategoryName, ProductID from
Categories left join Products on
Categories.CategoryID = Products.CategoryID where
ProductID is NULL;  

Chapter 4, Step 7
Select 'SHIPPED' as ShipStatus, OrderID, OrderDate
from Orders where ShipDate is not NULL union
Select 'NOT SHIPPED' as ShipStatus, OrderID, OrderDate
from Orders where ShipDate is NULL
Order by OrderDate;  


Chapter 5, Step 1
Select count(OrderID) as OrderCount, sum(TaxAmount)
as TaxAmountSum from Orders  
Chapter 5, Step 2
Select CategoryName, count(ProductID) as ProductCount,
max(ListPrice) as MostExpensiveProduct from
Categories join Products on Categories.CategoryID = Products.CategoryID
Group by CategoryName
Order by ProductCount DESC;  

Chapter 5, Step 3
Select EmailAddress, sum(ItemPrice * Quantity) as
TotalPriceOfAllItems, sum(DiscountAmount * Quantity) as
AllItemsTotalDiscount from Customers a, Orders b,
OrderItems c where a.CustomerID = b.CustomerID and
b.OrderID = c.OrderID
Group by EmailAddress
Order by TotalPriceOfAllItems DESC;  

Chapter 5, Step 4
Select EmailAddress, count(a.OrderID) as
OrderCount, sum(Quantity *(ItemPrice - DiscountAmount)) as
TotalOrderAmount from Customers c join Orders o on
c.CustomerID = o.CustomerID join
OrderItems a on o.OrderID = a.OrderID
Group by EmailAddress having count(a.OrderID) > 1
Order by TotalOrderAmount DESC;  

Chapter 5, Step 5
Select EmailAddress, count(a.OrderID) as
OrderCount, sum(Quantity *(ItemPrice - DiscountAmount)) as
TotalOrderAmount from Customers c join Orders o on
c.CustomerID = o.CustomerID join
OrderItems a on o.OrderID = a.OrderID
where ItemPrice > 400
Group by EmailAddress having count(a.OrderID) > 1
Order by TotalOrderAmount DESC;  

Chapter 5, Step 6
Select ProductName, sum(Quantity *(ItemPrice - DiscountAmount))
as TotalAmount from Products join OrderItems on Products.ProductID =
OrderItems.ProductID
Group by ROLLUP(ProductName);  

Chapter 5, Step 7
Select EmailAddress, count(Distinct(ProductID)) as ProductCount
from Customers a join Orders b on
a.CustomerID = b.CustomerID join
OrderItems c on b.OrderID = c.OrderID
Group by EmailAddress having count(Distinct(ProductID)) > 1;  


Chapter 6, Step 1
Select CategoryName from Categories
where CategoryID in (select CategoryID from Products)
Order by CategoryName  

Chapter 6, Step 2
Select ProductName, ListPrice
from Products where ListPrice >
(Select AVG(ListPrice) from Products)
Order by ListPrice DESC;  

Chapter 6, Step 3
Select CategoryName from Categories
where NOT EXISTS (Select * from Products where
Categories.CategoryID = Products.CategoryID);  

Chapter 6, Step 4
Select EmailAddress, a.OrderID, sum(Quantity *(ItemPrice
- DiscountAmount)) as OrderTotal from
Customers c join Orders o on c.CustomerID = o.CustomerID
join OrderItems a on o.OrderID = a.OrderID
Group by EmailAddress, a.OrderID;

Select EmailAddress, max(CustomerOrder.OrderTotal) as LargestOrder
from (select EmailAddress, a.OrderID, sum(Quantity *(ItemPrice -
DiscountAmount)) as OrderTotal from Customers c join Orders o
on c.CustomerID = o.CustomerID join OrderItems a on o.OrderID
= a.OrderID
Group by EmailAddress, a.OrderID) as
CustomerOrder
Group by EmailAddress;  

Chapter 6, Step 5
Select a.ProductName, a.DiscountPercent from
Products a where NOT EXISTS
(Select * from Products b where a.ProductName
!= b.ProductName and a.DiscountPercent = b.DiscountPercent)
Order by a.ProductName  

Chapter 6, Step 6
Select EmailAddress, OrderID, OrderDate
from Customers join Orders o on Customers.CustomerID =
o.CustomerID where OrderDate = (Select min(OrderDate)
from Orders oo where oo.OrderID = o.OrderID);  
Chapter 7, Step 1
Insert into Categories(CategoryName)
Values('Brass');  

Chapter 7, Step 2
Update Categories
Set CategoryName = 'Woodwinds'
where CategoryID = 5;  

Chapter 7, Step 3
Delete Categories where CategoryID = 5;  

Chapter 7, Step 4
Insert into Products
Values(4, 'dgx_640', 'Yamaha DGX 640 88-Key Digital Piano',
'Long description to come.', 799.99, 0, GETDATE()); 

Chapter 7, Step 5
Update Products
Set DiscountPercent = 35
where ProductCode = 'dgx_640';  

Chapter 7, Step 6
Delete Products where CategoryID = 4
Delete Categories where CategoryID = 4;  

Chapter 7, Step 7
Insert into Customers
Values('rick@raven.com','', 'Rick', 'Raven', null,
null);  

Chapter 7, Step 8
Update Customers set Password = 'secret'
where EmailAddress = 'rick@raven.com';  

Chapter 7, Step 9
Update Customers set Password = 'reset';  

Chapter 8, Step 1
Select ListPrice, cast(ListPrice as decimal(10, 1)) as
OneDigitRightOfDeci, CONVERT(integer, ListPrice) as
ListPriceConvertInteger, cast(ListPrice as integer) as ListPriceCastInteger
from Products;  

Chapter 8, Step 2
Select DateAdded, cast(DateAdded as date) as DateOnly,
cast(DateAdded as time) as TimeOnly, format(cast(DateAdded as date),'M')
as MonthAndDay from Products;  

Chapter 8, Step 3
Select convert(varchar, OrderDate, 101) as Format1,
convert(varchar, OrderDate, 0) as Format2,
convert(varchar, OrderDate, 14) as Format3
from Orders;  
Chapter 9, Step 1
Select ListPrice, DiscountPercent,
round(ListPrice *(DiscountPercent/100),2) as
DiscountAmount from Products;  

Chapter 9, Step 2
Select OrderDate, Datename(year, OrderDate) as Year,
Datename(day, OrderDate) as Day,
Dateadd(day, 30, OrderDate) as Plus30Days from Orders;  

Chapter 9, Step 3
Select CardNumber, Len(CardNumber) as Length,
Right(CardNumber, 4) as LastFour, 'XXXX-XXXX-XXXX-' +
Right(CardNumber, 4) as XsPlusLastFour from Orders;  

Chapter 9, Step 4
Select OrderID, OrderDate, Dateadd(day, 2, OrderDate)
as ApproximateShipDate, ShipDate, Datediff(day, OrderDate,
ShipDate) as DaysToShip from Orders
Where Year(OrderDate) = 2020 and Month(OrderDate) = 1;  


Chapter 10, Step 1
 

Chapter 10, Step 2
 


Chapter 11, Step 1
Create Index ix_ZipCode on Addresses(ZipCode);
 
Chapter 11, Step 2
Create Table Users(UserID int not NULL Primary Key,
EmailAddress Varchar(50) NULL, FirstName Varchar(50) NULL,
LastName Varchar(50) NULL);

Create Table Products(ProductID int not NULL Primary Key,
ProductName Varchar(50) NULL);

Create Table Downloads(DownloadID int not NULL Primary Key,
UserID int not NULL references Users(UserID),
DownloadDate smalldatetime NULL, FileName varchar(50) null,
ProductID int not NULL references Products(ProductID));

Create Index ix_Downloads_UserID on Downloads(UserID);
Create Index ix_Downloads_ProductID on Downloads(ProductID);  

Chapter 11, Step 3
Insert into Users Values
(1, 'johnsmith@gmail.com', 'John', 'Smith'),
(2, 'janedoe@yahoo.com', 'Jane', 'Doe');
go
Insert into Products Values
(1, 'Local Music Vol 1'),
(2, 'Local Music Vol 2');
go
Insert into Downloads Values
(1, 1, GETDATE(), 'petals_are_falling.mp3', 1),
(2, 2, GETDATE(), 'turn_signal.mp3', 1),
(3, 2, GETDATE(), 'one_horse_town.mp3', 2);
Go

Select EmailAddress, FirstName, LastName, DownloadDate,
FileName, ProductName from
Downloads d join Users u on u.UserID = d.UserID join
Products p on p.ProductID = d.UserID
Order by EmailAddress DESC, ProductName ASC;  
Chapter 11, Step 4
Alter Table Products
Add ProductPrice numeric(5,2) default 9.99;

Alter Table Products
Add DateProductAdded smalldatetime default GETDATE(); 

Chapter 11, Step 5
Alter Table Users
Alter column FirstName varchar(20) not Null;  

Update Users
Set FirstName = null where UserID = 1;   


Update Users
Set FirstName = '1234567891011121314151617181920'
where UserID = 1;  


Chapter 12, Step 1 – Step 7

Use MyWebDB
Create Table Products(ProductID int Primary Key not NULL,
ProductName varchar(50) not NULL)

Create index ix_ProductName on Products(ProductName)
Go

Create Table Users(UserID int Primary Key not NULL,
FirstName nvarchar(50) not NULL, LastName nvarchar(50) not NULL,
EmailAddress nvarchar(50) not NULL)

Create index ix_EmailAddress on Users(EmailAddress)
Go

Create Table Downloads(DownloadID int Primary Key not NULL,
UserID int not NULL, DownloadDate Datetime not NULL,
FileName nvarchar(50) not NULL, ProductID int not NULL,
Constraint fk_DownloadUser Foreign Key(UserID) references
Users(UserID), Constraint fk_DownloadProducts Foreign Key(ProductID)
references Products(ProductID));         
